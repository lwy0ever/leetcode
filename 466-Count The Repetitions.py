class Solution:\u000A    def getMaxRepetitions(self, s1: str, n1: int, s2: str, n2: int) \u002D\u003E int:\u000A        # 统计[s1,n1]中包括的s2的数量cnt\u000A        # 则答案就是cnt // n2\u000A        # tips:\u000A        # 在统计cnt的时候,记录匹配一个s1之后,s2的位置\u000A        # 当s2的位置出现重复的时候,说明出现了循环\u000A        l1 \u003D len(s1)\u000A        l2 \u003D len(s2)\u000A        pos2 \u003D dict()   # pos2[p] \u003D (s1cnt,s2cnt),表示经过s1cnt个s1之后,s2的位置p,并且匹配成功了s2cnt个s2\u000A        s1cnt \u003D 0\u000A        s2cnt \u003D 0\u000A        p \u003D 0\u000A        while True:\u000A            for c1 in s1:\u000A                if c1 \u003D\u003D s2[p]: # 有一个匹配的\u000A                    p +\u003D 1\u000A                    if p \u003D\u003D l2: # s2匹配完毕,从0开始\u000A                        p \u003D 0\u000A                        s2cnt +\u003D 1\u000A            s1cnt +\u003D 1\u000A            if s1cnt \u003D\u003D n1:\u000A                return s2cnt // n2  # 还没有出现循环(或者刚刚出现循环,还没有进入判断循环的阶段)就已经到了n1\u000A            if p in pos2:   # 出现了循环\u000A                s1pre,s2pre \u003D pos2[p]\u000A                s1loop,s2loop \u003D s1cnt \u002D s1pre,s2cnt \u002D s2pre\u000A                break\u000A            else:\u000A                pos2[p] \u003D (s1cnt,s2cnt)\u000A        #print(s1loop,s2loop,s1pre,s2pre)\u000A        cnt \u003D s2pre + (n1 \u002D s1pre) // s1loop * s2loop\u000A        #print(cnt)\u000A        # 剩余部分,暴力统计\u000A        s2cnt \u003D 0\u000A        rest \u003D (n1 \u002D s1pre) % s1loop\u000A        #print(rest,p)\u000A        for i in range(rest):\u000A            for c1 in s1:\u000A                if c1 \u003D\u003D s2[p]:\u000A                    p +\u003D 1\u000A                    if p \u003D\u003D l2:\u000A                        p \u003D 0\u000A                        s2cnt +\u003D 1\u000A        #print(cnt,s2cnt)\u000A        return (cnt + s2cnt) // n2