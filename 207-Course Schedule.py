class Solution:\u000A    def canFinish(self, numCourses: int, prerequisites: List[List[int]]) \u002D\u003E bool:\u000A        # 借助一个标志列表status,用于判断每个节点i(课程)的状态:\u000A        # 未被 DFS 访问:status[i] \u003D 0\u000A        # 已被其他节点启动的DFS访问:i \u003D \u002D1\u000A        # 已被当前节点启动的DFS访问:i \u003D 1\u000A        def dfs(c):\u000A            if status[c] \u003D\u003D \u002D1:\u000A                return True\u000A            if status[c] \u003D\u003D 1:\u000A                return False\u000A            status[c] \u003D 1\u000A            for pre in d[c]:\u000A                if not dfs(pre):\u000A                    return False\u000A            status[c] \u003D \u002D1\u000A            return True\u000A\u000A        d \u003D collections.defaultdict(list)\u000A        #isGoodCourse \u003D [False] * numCourses\u000A        status \u003D [0] * numCourses\u000A        for course,pre in prerequisites:\u000A            d[course].append(pre)\u000A        for i in range(numCourses):\u000A            # check circle\u000A            # dfs\u000A            if not dfs(i):\u000A                return False\u000A        return True