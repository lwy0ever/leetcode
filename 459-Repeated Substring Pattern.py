class Solution:\u000A    def repeatedSubstringPattern(self, s: str) \u002D\u003E bool:\u000A        # 方法2:如果s满足条件,那么将两个s连在一起,并移除第一个和最后一个字符,那么得到的字符串一定包含s,即s是它的一个子串\u000A        return (s + s).find(s,1) !\u003D len(s)\u000A\u000A        # 方法1:\u000A        # 如果可以,则子串一定是从s[0]开始的\u000A        n \u003D len(s)\u000A        for l in range(1,n // 2 + 1):\u000A            if n % l !\u003D 0:\u000A                continue\u000A            for start in range(1,n // l):\u000A                if s[:l] !\u003D s[start * l:(start + 1) * l]:\u000A                    break\u000A            else:\u000A                return True\u000A        return False